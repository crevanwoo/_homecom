@font-face {
	font-family: Light;
	src: url(../fonts/GothamProLight.ttf)
}

@font-face {
	font-family: Regular;
	src: url(../fonts/GothamProRegular.ttf)
}

@font-face {
	font-family: Medium;
	src: url(../fonts/GothamProMedium.ttf)
}

@font-face {
	font-family: Bold;
	src: url(../fonts/GothamProBold.ttf)
}

$dark_shim: rgba(46, 23, 6, 0.55);
$trans: 0.3s;
$c_cream: rgba(255, 255, 240, 1);
$c_brown: rgba(46, 23, 6, 1);
//font
$font_light: $c_cream;
$font_dark: $c_brown;
$font_error: darkred;
//bg
$bg_light: $c_cream;
$bg_dark: $c_brown;

//border
$bd_error: darkred;
$bd_light: $c_cream;
$bd_dark: $c_brown;

/*Elem sizes */

$header_height: 70px;
$footer_height: 300px;
$input_padding: 20px;

/*Breakpoints*/

$desktop: 1200px;
$laptop: 900px;
$tablet: 500px;
%clear {
	position: relative;
	&:after {
		content: '';
		display: block;
		clear: both;
	}
}

%shim {
	&:before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: $dark_shim;
	}
}

@mixin bp($size) {
	@if $size==desktop {
		@media screen and (max-width: $desktop) {
			@content;
		}
	}
	@elseif $size==laptop {
		@media screen and (min-width: $laptop) and (max-width: $desktop - 1px) {
			@content;
		}
	}
	@elseif $size==tablet {
		@media screen and (min-width: $tablet) and (max-width: $laptop - 1px) {
			@content;
		}
	}
	@elseif $size==mobile {
		@media screen and (max-width: $tablet) {
			@content;
		}
	}
}

@mixin ph {
	&::-webkit-input-placeholder {
		font-family: sans-serif;
		@content
	}
	&::-moz-placeholder {
		font-family: sans-serif;
		@content
	}
	/* Firefox 19+ */
	&:-moz-placeholder {
		font-family: sans-serif;
		@content
	}
	&::placeholder {
		font-family: sans-serif;
		@content
	}
	&:placeholder {
		font-family: sans-serif;
		@content
	}
}

@mixin hover_underline($bottom_offset, $background, $height) {
	position: relative;
	&:after {
		content: '';
		position: absolute;
		display: block;
		width: 0;
		height: $height;
		left: 50%;
		bottom: $bottom_offset;
		transition: $trans;
		background-color: $background;
	}
	&:hover {
		&:after {
			left: 0;
			width: 100%
		}
	}
}

@mixin hover_underline_min($bottom_offset, $background, $height, $width) {
	position: relative;
	&:after {
		content: '';
		position: absolute;
		display: block;
		width: 0;
		height: $height;
		left: 50%;
		bottom: $bottom_offset;
		transition: $trans;
		background-color: $background;
		margin-left: 0;
	
	}
	&:hover {
		&:after {
			margin-left: -$width/2;
			width: $width;
		}
	}
}

